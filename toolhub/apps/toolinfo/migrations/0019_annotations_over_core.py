# Generated by Django 2.2.26 on 2022-03-10 23:30

import django.core.validators
from django.db import migrations, models
import toolhub.apps.toolinfo.validators
import toolhub.fields


class Migration(migrations.Migration):

    dependencies = [
        ('toolinfo', '0018_backfill_annotations'),
    ]

    operations = [
        migrations.AddField(
            model_name='annotations',
            name='api_url',
            field=toolhub.fields.BlankAsNullTextField(blank=True, help_text="A link to the tool's API, if available.", max_length=2047, null=True, validators=[django.core.validators.URLValidator(schemes=['http', 'https'])]),
        ),
        migrations.AddField(
            model_name='annotations',
            name='available_ui_languages',
            field=toolhub.fields.JSONSchemaField(blank=True, default=list, help_text="The language(s) the tool's interface has been translated into. Use ISO 639 language codes like `zh` and `scn`. If not defined it is assumed the tool is only available in English.", validators=[toolhub.apps.toolinfo.validators.validate_language_code_list]),
        ),
        migrations.AddField(
            model_name='annotations',
            name='bugtracker_url',
            field=toolhub.fields.BlankAsNullTextField(blank=True, help_text="A link to the tool's bug tracker on GitHub, Bitbucket, Phabricator, etc.", max_length=2047, null=True, validators=[django.core.validators.URLValidator(schemes=['http', 'https'])]),
        ),
        migrations.AddField(
            model_name='annotations',
            name='deprecated',
            field=models.BooleanField(default=False, help_text='If true, the use of this tool is officially discouraged. The `replaced_by` parameter can be used to define a replacement.'),
        ),
        migrations.AddField(
            model_name='annotations',
            name='developer_docs_url',
            field=toolhub.fields.JSONSchemaField(blank=True, default=list, help_text="A link to the tool's developer documentation, if available.", validators=[toolhub.apps.toolinfo.validators.validate_url_mutilingual_list]),
        ),
        migrations.AddField(
            model_name='annotations',
            name='experimental',
            field=models.BooleanField(default=False, help_text='If true, this tool is unstable and can change or go offline at any time.'),
        ),
        migrations.AddField(
            model_name='annotations',
            name='feedback_url',
            field=toolhub.fields.JSONSchemaField(blank=True, default=list, help_text="A link to location where the tool's user can leave feedback.", validators=[toolhub.apps.toolinfo.validators.validate_url_mutilingual_list]),
        ),
        migrations.AddField(
            model_name='annotations',
            name='for_wikis',
            field=toolhub.fields.JSONSchemaField(blank=True, default=list, help_text="A string or array of strings describing the wiki(s) this tool can be used on. Use hostnames such as `zh.wiktionary.org`. Use asterisks as wildcards. For example, `*.wikisource.org` means 'this tool works on all Wikisource wikis.' `*` means 'this works on all wikis, including Wikimedia wikis.'"),
        ),
        migrations.AddField(
            model_name='annotations',
            name='icon',
            field=toolhub.fields.BlankAsNullCharField(blank=True, help_text='A link to a Wikimedia Commons file description page for an icon that depicts the tool.', max_length=2047, null=True, validators=[django.core.validators.RegexValidator(regex='^https://commons\\.wikimedia\\.org/wiki/File:.+\\..+$')]),
        ),
        migrations.AddField(
            model_name='annotations',
            name='privacy_policy_url',
            field=toolhub.fields.JSONSchemaField(blank=True, default=list, help_text="A link to the tool's privacy policy, if available.", validators=[toolhub.apps.toolinfo.validators.validate_url_mutilingual_list]),
        ),
        migrations.AddField(
            model_name='annotations',
            name='replaced_by',
            field=toolhub.fields.BlankAsNullTextField(blank=True, help_text='If this tool is deprecated, this parameter should be used to link to the replacement tool.', max_length=2047, null=True, validators=[django.core.validators.URLValidator(schemes=['http', 'https'])]),
        ),
        migrations.AddField(
            model_name='annotations',
            name='tool_type',
            field=toolhub.fields.BlankAsNullCharField(blank=True, choices=[('web app', 'web app'), ('desktop app', 'desktop app'), ('bot', 'bot'), ('gadget', 'gadget'), ('user script', 'user script'), ('command line tool', 'command line tool'), ('coding framework', 'coding framework'), ('lua module', 'lua module'), ('template', 'template'), ('other', 'other')], help_text='The manner in which the tool is used. Select one from the list of options.', max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='annotations',
            name='translate_url',
            field=toolhub.fields.BlankAsNullTextField(blank=True, help_text="A link to the tool's translation interface.", max_length=2047, null=True, validators=[django.core.validators.URLValidator(schemes=['http', 'https'])]),
        ),
        migrations.AddField(
            model_name='annotations',
            name='user_docs_url',
            field=toolhub.fields.JSONSchemaField(blank=True, default=list, help_text="A link to the tool's user documentation, if available.", validators=[toolhub.apps.toolinfo.validators.validate_url_mutilingual_list]),
        ),
    ]
