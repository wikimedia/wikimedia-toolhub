[tool.poetry]
name = "toolhub"
version = "1.0.0"
description = "An authoritative and well promoted catalog of Wikimedia tools"
authors = [
  "Bryan Davis <bd808@wikimedia.org>"
]
license = "GPL-3.0-or-later"
readme = "README.rst"
include = [
  "README.rst",
  "pyproject.toml",
  "COPYING"
]

[tool.poetry.dependencies]
python = "^3.9"
Django = "^3.2.13"
django-environ = "^0.7.0"
django-log-request-id = "^1.6.0"
mysqlclient = "^2.0.1"
social-auth-app-django = "^5.0.0"
django-webpack-loader = "^0.7.0"
djangorestframework = "^3.12.1"
PyYAML = "^5.3.1"
uritemplate = "^3.0.1"
django-filter = "^21.1"
jsonfield = "^3.1.0"
drf-friendly-errors = {git = "https://github.com/bd808/drf-friendly-errors.git", rev = "933eb5b"}
drf-spectacular = "^0.21.0"
requests = "^2.25.0"
drf-nested-routers = "^0.93.3"
whitenoise = {extras = ["brotli"], version = "^5.2.0"}
django-oauth-toolkit = "^1.3.3"
jsonschema = "^3.2.0"
django-reversion = "^4.0.0"
spdx-license-list = "^0.5.2"
jsonpatch = "^1.28"
django-reversion-compare = "^0.14.1"
elasticsearch-dsl = ">=7.3.0,<7.4.0"
django-elasticsearch-dsl = ">=7.0.0,<8.0.0"
django-elasticsearch-dsl-drf = "^0.22.4"
django-safedelete = "^1.0.0"
rules = "^3.0"
django-csp = "^3.7"
django-prometheus = "2.1.0"
ecs-logging = "^1.0.1"
python-memcached = "^1.59"
elasticsearch = ">=7.10.0,<7.11.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
black = "^22.12.0"
flake8 = "^5.0.4"
flake8-blind-except = "^0.2.1"
flake8-bugbear = "^22.12.6"
flake8-builtins = "^2.0.1"
flake8-comprehensions = "^3.10.1"
flake8-docstrings = "^1.6.0"
flake8-import-order = "^0.18.2"
flake8-import-single = "^0.1.5"
flake8-logging-format = "^0.9.0"
flake8-rst-docstrings = "^0.3.0"
pytest-cov = "^4.0.0"
django-coverage-plugin = "^3.0.0"
bandit = "^1.7.4"
Sphinx = "^4.1.2"
sphinxcontrib-django = "^0.5.1"
sphinx-autobuild = "^2021.3.14"
sphinx-copybutton = "^0.4.0"
sphinx-rtd-theme = "^1.0.0"
coverage = {extras = ["toml"], version = "^6.5.0"}
httpretty = "^1.1.4"
unittest2 = "^1.1.0"
pylint-django = "^2.5.3"
requests-mock = "^1.10.0"
Flask = "^2.0.1"  # contrib/oauth-client-example
envparse = "^0.2.0"  # contrib/oauth-client-example
Authlib = "^0.15.4"  # contrib/oauth-client-example

[tool.pylint]

[tool.pylint.master]
load-plugins = "pylint_django"

[tool.pylint.DESIGN]
max-branches = 16

[tool.black]
line-length = 79
target_version = ['py37']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.tox
  | \.venv
  | _build
  | build
  | dist
  | migrations
  | node_modules
)/
'''

[tool.isort]
known_first_party = ["toolhub", "vue"]
multi_line_output = 3
lines_after_imports = 2
force_grid_wrap = 0
combine_as_imports = true
include_trailing_comma = true

[tool.coverage.run]
source = ["toolhub", "vue"]
omit = [
  "*/migrations/*",
  "toolhub/wsgi.py",
  "toolhub/apps/toolinfo/schema2model.py",
]
branch = true
dynamic_context = "test_function"
relative_files = true

[tool.coverage.report]
fail_under = 85
show_missing = true
skip_covered = true
skip_empty = true
ignore_errors = true
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
]

[tool.coverage.html]
directory = "docs/htmlcov"
show_contexts = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
